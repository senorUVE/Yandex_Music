"""create all database

Revision ID: 4e7e55ad3b82
Revises: 
Create Date: 2023-12-07 02:11:42.611488

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4e7e55ad3b82'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Album',
    sa.Column('album_name', sa.String(), nullable=False),
    sa.Column('drop_date', sa.Date(), nullable=False),
    sa.Column('image', sa.LargeBinary(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Artist',
    sa.Column('artist_name', sa.String(), nullable=False),
    sa.Column('number_of_auditions', sa.BigInteger(), nullable=False),
    sa.Column('image', sa.LargeBinary(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.CheckConstraint('number_of_auditions > 0'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Genre',
    sa.Column('genre_name', sa.String(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Person',
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('Playlist',
    sa.Column('playlist_name', sa.String(), nullable=False),
    sa.Column('creation_date', sa.Date(), nullable=False),
    sa.Column('image', sa.LargeBinary(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Album2Artist',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('album_id', sa.BigInteger(), nullable=True),
    sa.Column('artist_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['album_id'], ['Album.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['artist_id'], ['Artist.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Person2Album',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('person_id', sa.BigInteger(), nullable=True),
    sa.Column('album_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['album_id'], ['Album.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['person_id'], ['Person.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Person2Playlist',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('person_id', sa.BigInteger(), nullable=True),
    sa.Column('playlist_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['Person.id'], ),
    sa.ForeignKeyConstraint(['playlist_id'], ['Playlist.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Song',
    sa.Column('song_name', sa.String(), nullable=False),
    sa.Column('duration', sa.TIME(), nullable=False),
    sa.Column('lyrics', sa.String(), nullable=True),
    sa.Column('is_podcast', sa.Boolean(), nullable=False),
    sa.Column('image', sa.LargeBinary(), nullable=False),
    sa.Column('audio', sa.LargeBinary(), nullable=False),
    sa.Column('genre_id', sa.BigInteger(), nullable=True),
    sa.Column('album_id', sa.BigInteger(), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['Album.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['Genre.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Song2Artist',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('song_id', sa.BigInteger(), nullable=True),
    sa.Column('artist_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['Artist.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['song_id'], ['Song.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Song2Playlist',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('song_id', sa.BigInteger(), nullable=True),
    sa.Column('playlist_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['playlist_id'], ['Playlist.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['song_id'], ['Song.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Song2Playlist')
    op.drop_table('Song2Artist')
    op.drop_table('Song')
    op.drop_table('Person2Playlist')
    op.drop_table('Person2Album')
    op.drop_table('Album2Artist')
    op.drop_table('Playlist')
    op.drop_table('Person')
    op.drop_table('Genre')
    op.drop_table('Artist')
    op.drop_table('Album')
    # ### end Alembic commands ###
